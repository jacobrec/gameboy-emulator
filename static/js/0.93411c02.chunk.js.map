{"version":3,"sources":["../../emulator/pkg/gameboy_emulator_bg.js","../node_modules/webpack/buildin/harmony-module.js"],"names":["heap","Array","fill","undefined","getObject","idx","push","heap_next","length","takeObject","ret","dropObject","cachegetUint8Memory0","getUint8Memory0","buffer","wasm","Uint8Array","WASM_VECTOR_LEN","passArray8ToWasm0","arg","malloc","ptr","set","init","romdata","ptr0","len0","cachegetInt32Memory0","getInt32Memory0","Int32Array","cachegetUint32Memory0","getArrayU32FromWasm0","len","Uint32Array","subarray","update","x","retptr","r0","r1","v0","slice","button_down","b","button_up","save_state","load_state","state","cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachedTextEncoder","TextEncoder","encodeString","encodeInto","view","buf","encode","read","written","__wbg_new_59cb74e423758ede","obj","addHeapObject","Error","__wbg_stack_558ba5917b466edd","arg0","arg1","realloc","mem","offset","code","charCodeAt","passStringToWasm0","stack","__wbg_error_4bb6c2a97407129a","console","error","__wbindgen_object_drop_ref","exports","originalModule","webpackPolyfill","Object","create","children","defineProperty","enumerable","get","l","i"],"mappings":"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","file":"static/js/0.93411c02.chunk.js","sourcesContent":["import * as wasm from './gameboy_emulator_bg.wasm';\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @param {Uint8Array} romdata\n*/\nexport function init(romdata) {\n    var ptr0 = passArray8ToWasm0(romdata, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    wasm.init(ptr0, len0);\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nlet cachegetUint32Memory0 = null;\nfunction getUint32Memory0() {\n    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory0;\n}\n\nfunction getArrayU32FromWasm0(ptr, len) {\n    return getUint32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\n/**\n* @param {number} x\n* @returns {Uint32Array}\n*/\nexport function update(x) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.update(retptr, x);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v0 = getArrayU32FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 4);\n        return v0;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {number} b\n*/\nexport function button_down(b) {\n    wasm.button_down(b);\n}\n\n/**\n* @param {number} b\n*/\nexport function button_up(b) {\n    wasm.button_up(b);\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @returns {Uint8Array}\n*/\nexport function save_state() {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.save_state(retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v0 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v0;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {Uint8Array} state\n*/\nexport function load_state(state) {\n    var ptr0 = passArray8ToWasm0(state, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    wasm.load_state(ptr0, len0);\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}